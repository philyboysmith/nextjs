{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/philsmith/Code/nextjs/components/ui/Pagination.js\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport \"./Pagination.css\";\nimport classnames from \"classnames\";\n\nvar Pagination = function Pagination(_ref) {\n  var totalPages = _ref.totalPages,\n      router = _ref.router,\n      rest = _objectWithoutProperties(_ref, [\"totalPages\", \"router\"]);\n\n  if (totalPages <= 1) return null;\n  var currentPage = router.query.page ? router.query.page : 1; // build an array from number of pages\n\n  var numbers = [];\n\n  for (var i = 1; i <= totalPages; i++) {\n    numbers.push(i);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, numbers.map(function (number) {\n    return React.createElement(Link, {\n      href: {\n        pathname: router.pathname,\n        query: _objectSpread({}, router.query, {\n          page: number\n        })\n      },\n      key: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: classnames(\"number\", {\n        active: number == currentPage\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, number));\n  }));\n};\n\nexport default withRouter(Pagination);","map":{"version":3,"sources":["/Users/philsmith/Code/nextjs/components/ui/Pagination.js"],"names":["Link","withRouter","classnames","Pagination","totalPages","router","rest","currentPage","query","page","numbers","i","push","map","number","pathname","active"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAqC;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAXC,IAAW;;AACtD,MAAIF,UAAU,IAAI,CAAlB,EAAqB,OAAO,IAAP;AACrB,MAAMG,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAaC,IAAb,GAAoBJ,MAAM,CAACG,KAAP,CAAaC,IAAjC,GAAwC,CAA5D,CAFsD,CAGtD;;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,UAArB,EAAiCO,CAAC,EAAlC,EAAsC;AACpCD,IAAAA,OAAO,CAACE,IAAR,CAAaD,CAAb;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,WACjB,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEV,MAAM,CAACU,QADb;AAEJP,QAAAA,KAAK,oBAEAH,MAAM,CAACG,KAFP;AAGHC,UAAAA,IAAI,EAAEK;AAHH;AAFD,OADR;AASE,MAAA,GAAG,EAAEA,MATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AACE,MAAA,SAAS,EAAEZ,UAAU,CAAC,QAAD,EAAW;AAC9Bc,QAAAA,MAAM,EAAEF,MAAM,IAAIP;AADY,OAAX,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGO,MALH,CAXF,CADiB;AAAA,GAAlB,CADH,CADF;AAyBD,CAjCD;;AAmCA,eAAeb,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport \"./Pagination.css\";\nimport classnames from \"classnames\";\n\nconst Pagination = ({ totalPages, router, ...rest }) => {\n  if (totalPages <= 1) return null;\n  const currentPage = router.query.page ? router.query.page : 1;\n  // build an array from number of pages\n  let numbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    numbers.push(i);\n  }\n  return (\n    <div className=\"pagination\">\n      {numbers.map(number => (\n        <Link\n          href={{\n            pathname: router.pathname,\n            query: {\n              // keep previous url args\n              ...router.query,\n              page: number\n            }\n          }}\n          key={number}\n        >\n          <a\n            className={classnames(\"number\", {\n              active: number == currentPage\n            })}\n          >\n            {number}\n          </a>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default withRouter(Pagination);\n"]},"metadata":{},"sourceType":"module"}