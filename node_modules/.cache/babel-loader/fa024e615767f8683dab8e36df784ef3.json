{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport classnames from 'classnames';\n\nvar Pagination = function Pagination(_ref) {\n  var totalPages = _ref.totalPages,\n      router = _ref.router,\n      rest = _objectWithoutProperties(_ref, [\"totalPages\", \"router\"]);\n\n  if (totalPages <= 1) return null;\n  var currentPage = router.query.page ? router.query.page : 1; // build an array from number of pages\n\n  var numbers = [];\n\n  for (var i = 1; i <= totalPages; i++) {\n    numbers.push(i);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"pagination\"\n  }, numbers.map(function (number) {\n    return React.createElement(Link, {\n      href: {\n        pathname: router.pathname,\n        query: _objectSpread({}, router.query, {\n          page: number\n        })\n      },\n      key: number\n    }, React.createElement(\"a\", {\n      className: classnames('number', {\n        active: number == currentPage\n      })\n    }, number));\n  }));\n};\n\nexport default withRouter(Pagination);","map":null,"metadata":{},"sourceType":"module"}